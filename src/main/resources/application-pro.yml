spring:
  datasource:
     url: jdbc:mysql://127.0.0.1:3306/template?autoReconnect=true&useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false&serverTimezone=GMT%2B8
     username: test
     password: 123456
     filters: wall,mergeStat
     type: com.alibaba.druid.pool.DruidDataSource
     ### 连接池配置
     druid:
       # 初始化大小，最小，最大
       initialSize: 5
       minIdle: 5
       maxActive: 20
       # 配置获取连接等待超时的时间
       maxWait: 60000
       # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
       timeBetweenEvictionRunsMillis: 60000
       # 配置一个连接在池中最小生存的时间，单位是毫秒
       minEvictableIdleTimeMillis: 300000
       validationQuery: SELECT 1 FROM DUAL
       testWhileIdle: true
       testOnBorrow: false
       testOnReturn: false
       # 打开PSCache，并且指定每个连接上PSCache的大小
       poolPreparedStatements: true
       maxPoolPreparedStatementPerConnectionSize: 20
       # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
       connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
       ######Druid监控配置######
       web-stat-filter:
          exclusions: '*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*'
       stat-view-servlet:
          login-username: admin
          login-password: 123456
          resetEnable: false

#java -jar xxx.jar --spring.profiles.active=dev & 表示使用测试环境的配置
#java -jar xxx.jar --spring.profiles.active=pro & 表示使用生产环境的配置
#nohup java -jar template-0.0.1-SNAPSHOT.jar --spring.profiles.active=pro  > log.file  2>&1 &
#nohup java -jar template-0.0.1-SNAPSHOT.jar > log.file  2>&1 &
# 查看运行的jar的pid,看看jar程序是否运行:ps -ef|grep java
# 如果文件过大，可在不停止jar包的情况下清空日志文件:用命令 cp /dev/null nohup.out  清空文件
# kill -2 pid

#win 后台运行
#@echo off
#start javaw -jar xx.jar
#exit

# win 查看java进程
# jps -l（显示java进程的Id和软件路径及名称）


# win关闭进程
# taskkill /F /pid 26768

